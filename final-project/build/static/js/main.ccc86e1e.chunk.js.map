{"version":3,"sources":["components/App.js","index.js"],"names":["App","mapContainer","useRef","map","lng","setLng","useState","lat","setLat","zoom","setZoom","useEffect","current","mapboxgl","Map","container","style","center","on","addSource","addLayer","getCenter","toFixed","getZoom","className","ref","accessToken","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAKe,SAASA,IAEpB,MAAMC,EAAeC,iBAAO,MACtBC,EAAMD,iBAAO,OACZE,EAAKC,GAAUC,oBAAU,KACzBC,EAAKC,GAAUF,mBAAS,KACxBG,EAAMC,GAAWJ,mBAAS,GA+J/B,OA5JFK,qBAAU,KACFR,EAAIS,UACRT,EAAIS,QAAU,IAAIC,IAASC,IAAI,CAC7BC,UAAWd,EAAaW,QACxBI,MAAO,6CACPC,OAAQ,CAACb,EAAKG,GACdE,KAAMA,QAKZE,qBAAU,KACDR,EAAIS,UACTT,EAAIS,QAAQM,GAAG,QAAQ,KAGrBf,EAAIS,QAAQO,UAAU,cAAe,CACrC,KAAQ,UACR,KAAQ,oEAGRhB,EAAIS,QAAQQ,SACZ,CACA,GAAM,mBACN,KAAQ,UACR,OAAU,cACV,QAAW,EACX,MAAS,CAET,iBAAkB,CAClB,cACA,CAAC,UACD,CAAC,MAAO,OACR,EACA,EACA,EACA,GAIA,oBAAqB,CACrB,cACA,CAAC,UACD,CAAC,QACD,EACA,EACA,EACA,GAKA,gBAAiB,CACjB,cACA,CAAC,UACD,CAAC,mBACD,EACA,qBACA,GACA,mBACA,GACA,mBACA,GACA,mBACA,GACA,kBACA,EACA,kBAGA,iBAAkB,CAClB,cACA,CAAC,UACD,CAAC,QACD,EACA,EACA,EACA,IAGA,kBAAmB,CACnB,cACA,CAAC,UACD,CAAC,QACD,EACA,EACA,EACA,KAIA,kBAGAjB,EAAIS,QAAQQ,SACZ,CACA,GAAM,oBACN,KAAQ,SACR,OAAU,cACV,QAAW,EACX,MAAS,CAET,gBAAiB,CACjB,cACA,CAAC,UACD,CAAC,QACD,EACA,CAAC,cAAe,CAAC,UAAW,CAAC,MAAO,OAAQ,EAAG,EAAG,EAAG,GACrD,GACA,CAAC,cAAe,CAAC,UAAW,CAAC,MAAO,OAAQ,EAAG,EAAG,EAAG,KAGrD,eAAgB,CAChB,cACA,CAAC,UACD,CAAC,MAAO,OACR,EACA,qBACA,EACA,mBACA,EACA,mBACA,EACA,mBACA,EACA,kBACA,EACA,kBAEA,sBAAuB,QACvB,sBAAuB,EAEvB,iBAAkB,CAClB,cACA,CAAC,UACD,CAAC,QACD,EACA,EACA,EACA,KAIA,qBAMFjB,EAAIS,QAAQM,GAAG,QAAQ,KACrBb,EAAOF,EAAIS,QAAQS,YAAYjB,IAAIkB,QAAQ,IAC3Cd,EAAOL,EAAIS,QAAQS,YAAYd,IAAIe,QAAQ,IAC3CZ,EAAQP,EAAIS,QAAQW,UAAUD,QAAQ,WAKxC,gCACI,sBAAKE,UAAU,UAAf,wBACgBpB,EADhB,gBACkCG,EADlC,YACgDE,KAEhD,qBAAKgB,IAAKxB,EAAcuB,UAAU,qBA5K9CX,IAASa,YAAc,iGCGvBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC7B,EAAD,MAEF8B,SAASC,eAAe,W","file":"static/js/main.ccc86e1e.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoiaXNhYWt0cmVhdHkiLCJhIjoiY2t1Mzhta2xnMW00MzJvczhmNzAxYmFmMyJ9.H05SHwWlCus6O_MBcXFnUQ';\r\n\r\nexport default function App() {\r\n\r\n    const mapContainer = useRef(null);\r\n    const map = useRef(null);\r\n    const [lng, setLng] = useState(-99);\r\n    const [lat, setLat] = useState(38);\r\n    const [zoom, setZoom] = useState(4);\r\n\r\n    // Initializes Map\r\n    useEffect(() => {\r\n        if (map.current) return; // initialize map only once\r\n        map.current = new mapboxgl.Map({\r\n          container: mapContainer.current,\r\n          style: 'mapbox://styles/mapbox/navigation-night-v1',\r\n          center: [lng, lat],\r\n          zoom: zoom\r\n        });\r\n      });\r\n\r\n    // Stores Coordinates\r\n    useEffect(() => {\r\n        if (!map.current) return; // wait for map to initialize\r\n        map.current.on('load', () => {\r\n          // Add a geojson point source.\r\n          // Heatmap layers also work with a vector tile source.\r\n          map.current.addSource('earthquakes', {\r\n          'type': 'geojson',\r\n          'data': 'https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson'\r\n          });\r\n           \r\n          map.current.addLayer(\r\n          {\r\n          'id': 'earthquakes-heat',\r\n          'type': 'heatmap',\r\n          'source': 'earthquakes',\r\n          'maxzoom': 9,\r\n          'paint': {\r\n          // Increase the heatmap weight based on frequency and property magnitude\r\n          'heatmap-weight': [\r\n          'interpolate',\r\n          ['linear'],\r\n          ['get', 'mag'],\r\n          0,\r\n          0,\r\n          6,\r\n          1\r\n          ],\r\n          // Increase the heatmap color weight weight by zoom level\r\n          // heatmap-intensity is a multiplier on top of heatmap-weight\r\n          'heatmap-intensity': [\r\n          'interpolate',\r\n          ['linear'],\r\n          ['zoom'],\r\n          0,\r\n          1,\r\n          9,\r\n          3\r\n          ],\r\n          // Color ramp for heatmap.  Domain is 0 (low) to 1 (high).\r\n          // Begin color ramp at 0-stop with a 0-transparancy color\r\n          // to create a blur-like effect.\r\n          'heatmap-color': [\r\n          'interpolate',\r\n          ['linear'],\r\n          ['heatmap-density'],\r\n          0,\r\n          'rgba(33,102,172,0)',\r\n          0.2,\r\n          'rgb(103,169,207)',\r\n          0.4,\r\n          'rgb(209,229,240)',\r\n          0.6,\r\n          'rgb(253,219,199)',\r\n          0.8,\r\n          'rgb(239,138,98)',\r\n          1,\r\n          'rgb(178,24,43)'\r\n          ],\r\n          // Adjust the heatmap radius by zoom level\r\n          'heatmap-radius': [\r\n          'interpolate',\r\n          ['linear'],\r\n          ['zoom'],\r\n          0,\r\n          2,\r\n          9,\r\n          20\r\n          ],\r\n          // Transition from heatmap to circle layer by zoom level\r\n          'heatmap-opacity': [\r\n          'interpolate',\r\n          ['linear'],\r\n          ['zoom'],\r\n          7,\r\n          1,\r\n          9,\r\n          0\r\n          ]\r\n          }\r\n          },\r\n          'waterway-label'\r\n          );\r\n           \r\n          map.current.addLayer(\r\n          {\r\n          'id': 'earthquakes-point',\r\n          'type': 'circle',\r\n          'source': 'earthquakes',\r\n          'minzoom': 7,\r\n          'paint': {\r\n          // Size circle radius by earthquake magnitude and zoom level\r\n          'circle-radius': [\r\n          'interpolate',\r\n          ['linear'],\r\n          ['zoom'],\r\n          7,\r\n          ['interpolate', ['linear'], ['get', 'mag'], 1, 1, 6, 4],\r\n          16,\r\n          ['interpolate', ['linear'], ['get', 'mag'], 1, 5, 6, 50]\r\n          ],\r\n          // Color circle by earthquake magnitude\r\n          'circle-color': [\r\n          'interpolate',\r\n          ['linear'],\r\n          ['get', 'mag'],\r\n          1,\r\n          'rgba(33,102,172,0)',\r\n          2,\r\n          'rgb(103,169,207)',\r\n          3,\r\n          'rgb(209,229,240)',\r\n          4,\r\n          'rgb(253,219,199)',\r\n          5,\r\n          'rgb(239,138,98)',\r\n          6,\r\n          'rgb(178,24,43)'\r\n          ],\r\n          'circle-stroke-color': 'white',\r\n          'circle-stroke-width': 1,\r\n          // Transition from heatmap to circle layer by zoom level\r\n          'circle-opacity': [\r\n          'interpolate',\r\n          ['linear'],\r\n          ['zoom'],\r\n          7,\r\n          0,\r\n          8,\r\n          1\r\n          ]\r\n          }\r\n          },\r\n          'waterway-label'\r\n          );\r\n          });\r\n\r\n\r\n\r\n        map.current.on('move', () => {\r\n          setLng(map.current.getCenter().lng.toFixed(4));\r\n          setLat(map.current.getCenter().lat.toFixed(4));\r\n          setZoom(map.current.getZoom().toFixed(2));\r\n        });\r\n      });\r\n\r\n      return (\r\n        <div>\r\n            <div className=\"sidebar\">\r\n                Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\r\n            </div>\r\n            <div ref={mapContainer} className=\"map-container\" />\r\n        </div>\r\n      );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}