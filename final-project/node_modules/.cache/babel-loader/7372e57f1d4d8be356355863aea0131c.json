{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Isaak\\\\Desktop\\\\Databas\\\\final-project\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = 'pk.eyJ1IjoiaXNhYWt0cmVhdHkiLCJhIjoiY2t1Mzhta2xnMW00MzJvczhmNzAxYmFmMyJ9.H05SHwWlCus6O_MBcXFnUQ';\nexport default function App() {\n  _s();\n\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [lng, setLng] = useState(-99);\n  const [lat, setLat] = useState(38);\n  const [zoom, setZoom] = useState(4); // Initializes Map\n\n  useEffect(() => {\n    if (map.current) return; // initialize map only once\n\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/dark-v10',\n      center: [lng, lat],\n      zoom: zoom\n    });\n  }); // Stores Coordinates\n\n  useEffect(() => {\n    if (!map.current) return; // wait for map to initialize\n\n    map.current.on('move', () => {\n      setLng(map.current.getCenter().lng.toFixed(4));\n      setLat(map.current.getCenter().lat.toFixed(4));\n      setZoom(map.current.getZoom().toFixed(2));\n    });\n    map.current.on('load', () => {\n      map.current.addSource('places', {\n        type: 'geojson',\n        data: stores\n      });\n      addMarkers();\n    });\n  });\n\n  function addMarkers() {\n    /* For each feature in the GeoJSON object above: */\n    for (const marker of stores.features) {\n      /* Create a div element for the marker. */\n      const el = document.createElement('div');\n      /* Assign a unique `id` to the marker. */\n\n      el.id = \"marker-\".concat(marker.properties.id);\n      /* Assign the `marker` class to each marker for styling. */\n\n      el.className = 'marker';\n      /**\r\n       * Create a marker using the div element\r\n       * defined above and add it to the map.\r\n       **/\n\n      new mapboxgl.Marker(el, {\n        offset: [0, -23]\n      }).setLngLat(marker.geometry.coordinates).addTo(map);\n      el.addEventListener('click', e => {\n        /* Fly to the point */\n        flyToStore(marker);\n        /* Close all other popups and display popup for clicked store */\n\n        createPopUp(marker);\n        /* Highlight listing in sidebar */\n\n        const activeItem = document.getElementsByClassName('active');\n        e.stopPropagation();\n\n        if (activeItem[0]) {\n          activeItem[0].classList.remove('active');\n        }\n\n        const listing = document.getElementById(\"listing-\".concat(marker.properties.id));\n        listing.classList.add('active');\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [\"Longitude: \", lng, \" | Latitude: \", lat, \" | Zoom: \", zoom]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainer,\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"P4PpKR22jXXog9P9JD7oXb6IQlA=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Isaak/Desktop/Databas/final-project/src/components/App.js"],"names":["React","useRef","useEffect","useState","mapboxgl","accessToken","App","mapContainer","map","lng","setLng","lat","setLat","zoom","setZoom","current","Map","container","style","center","on","getCenter","toFixed","getZoom","addSource","type","data","stores","addMarkers","marker","features","el","document","createElement","id","properties","className","Marker","offset","setLngLat","geometry","coordinates","addTo","addEventListener","e","flyToStore","createPopUp","activeItem","getElementsByClassName","stopPropagation","classList","remove","listing","getElementById","add"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAAmC;;;AAEnCA,QAAQ,CAACC,WAAT,GAAuB,gGAAvB;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAE1B,QAAMC,YAAY,GAAGN,MAAM,CAAC,IAAD,CAA3B;AACA,QAAMO,GAAG,GAAGP,MAAM,CAAC,IAAD,CAAlB;AACA,QAAM,CAACQ,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC,CAAC,EAAF,CAA9B;AACA,QAAM,CAACQ,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,CAAD,CAAhC,CAN0B,CAS1B;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,GAAG,CAACO,OAAR,EAAiB,OADL,CACa;;AACzBP,IAAAA,GAAG,CAACO,OAAJ,GAAc,IAAIX,QAAQ,CAACY,GAAb,CAAiB;AAC7BC,MAAAA,SAAS,EAAEV,YAAY,CAACQ,OADK;AAE7BG,MAAAA,KAAK,EAAE,iCAFsB;AAG7BC,MAAAA,MAAM,EAAE,CAACV,GAAD,EAAME,GAAN,CAHqB;AAI7BE,MAAAA,IAAI,EAAEA;AAJuB,KAAjB,CAAd;AAMD,GARM,CAAT,CAV0B,CAoB1B;;AACAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACM,GAAG,CAACO,OAAT,EAAkB,OADN,CACc;;AAC1BP,IAAAA,GAAG,CAACO,OAAJ,CAAYK,EAAZ,CAAe,MAAf,EAAuB,MAAM;AAC3BV,MAAAA,MAAM,CAACF,GAAG,CAACO,OAAJ,CAAYM,SAAZ,GAAwBZ,GAAxB,CAA4Ba,OAA5B,CAAoC,CAApC,CAAD,CAAN;AACAV,MAAAA,MAAM,CAACJ,GAAG,CAACO,OAAJ,CAAYM,SAAZ,GAAwBV,GAAxB,CAA4BW,OAA5B,CAAoC,CAApC,CAAD,CAAN;AACAR,MAAAA,OAAO,CAACN,GAAG,CAACO,OAAJ,CAAYQ,OAAZ,GAAsBD,OAAtB,CAA8B,CAA9B,CAAD,CAAP;AACD,KAJD;AAMAd,IAAAA,GAAG,CAACO,OAAJ,CAAYK,EAAZ,CAAe,MAAf,EAAuB,MAAM;AAEzBZ,MAAAA,GAAG,CAACO,OAAJ,CAAYS,SAAZ,CAAsB,QAAtB,EAAgC;AAC5BC,QAAAA,IAAI,EAAE,SADsB;AAE5BC,QAAAA,IAAI,EAAEC;AAFsB,OAAhC;AAIAC,MAAAA,UAAU;AACb,KAPD;AAQD,GAhBM,CAAT;;AAmBA,WAASA,UAAT,GAAsB;AACV;AACA,SAAK,MAAMC,MAAX,IAAqBF,MAAM,CAACG,QAA5B,EAAsC;AACpC;AACA,YAAMC,EAAE,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAX;AACA;;AACAF,MAAAA,EAAE,CAACG,EAAH,oBAAkBL,MAAM,CAACM,UAAP,CAAkBD,EAApC;AACA;;AACAH,MAAAA,EAAE,CAACK,SAAH,GAAe,QAAf;AAEA;AAClB;AACA;AACA;;AACkB,UAAIhC,QAAQ,CAACiC,MAAb,CAAoBN,EAApB,EAAwB;AAAEO,QAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAC,EAAL;AAAV,OAAxB,EACCC,SADD,CACWV,MAAM,CAACW,QAAP,CAAgBC,WAD3B,EAECC,KAFD,CAEOlC,GAFP;AAIAuB,MAAAA,EAAE,CAACY,gBAAH,CAAoB,OAApB,EAA8BC,CAAD,IAAO;AAChC;AACAC,QAAAA,UAAU,CAAChB,MAAD,CAAV;AACA;;AACAiB,QAAAA,WAAW,CAACjB,MAAD,CAAX;AACA;;AACA,cAAMkB,UAAU,GAAGf,QAAQ,CAACgB,sBAAT,CAAgC,QAAhC,CAAnB;AACAJ,QAAAA,CAAC,CAACK,eAAF;;AACA,YAAIF,UAAU,CAAC,CAAD,CAAd,EAAmB;AACfA,UAAAA,UAAU,CAAC,CAAD,CAAV,CAAcG,SAAd,CAAwBC,MAAxB,CAA+B,QAA/B;AACH;;AACD,cAAMC,OAAO,GAAGpB,QAAQ,CAACqB,cAAT,mBAAmCxB,MAAM,CAACM,UAAP,CAAkBD,EAArD,EAAhB;AACAkB,QAAAA,OAAO,CAACF,SAAR,CAAkBI,GAAlB,CAAsB,QAAtB;AACH,OAbD;AAcH;AACV;;AAEC,sBACE;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gCACgB7C,GADhB,mBACkCE,GADlC,eACgDE,IADhD;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,GAAG,EAAEN,YAAV;AAAwB,MAAA,SAAS,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQL;;GAnFuBD,G;;KAAAA,G","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoiaXNhYWt0cmVhdHkiLCJhIjoiY2t1Mzhta2xnMW00MzJvczhmNzAxYmFmMyJ9.H05SHwWlCus6O_MBcXFnUQ';\r\n\r\nexport default function App() {\r\n\r\n    const mapContainer = useRef(null);\r\n    const map = useRef(null);\r\n    const [lng, setLng] = useState(-99);\r\n    const [lat, setLat] = useState(38);\r\n    const [zoom, setZoom] = useState(4);\r\n\r\n\r\n    // Initializes Map\r\n    useEffect(() => {\r\n        if (map.current) return; // initialize map only once\r\n        map.current = new mapboxgl.Map({\r\n          container: mapContainer.current,\r\n          style: 'mapbox://styles/mapbox/dark-v10',\r\n          center: [lng, lat],\r\n          zoom: zoom\r\n        });\r\n      });\r\n\r\n    // Stores Coordinates\r\n    useEffect(() => {\r\n        if (!map.current) return; // wait for map to initialize\r\n        map.current.on('move', () => {\r\n          setLng(map.current.getCenter().lng.toFixed(4));\r\n          setLat(map.current.getCenter().lat.toFixed(4));\r\n          setZoom(map.current.getZoom().toFixed(2));\r\n        });\r\n\r\n        map.current.on('load', () => {\r\n\r\n            map.current.addSource('places', {\r\n                type: 'geojson',\r\n                data: stores\r\n            });\r\n            addMarkers();\r\n        });\r\n      });\r\n\r\n\r\n    function addMarkers() {\r\n                /* For each feature in the GeoJSON object above: */\r\n                for (const marker of stores.features) {\r\n                  /* Create a div element for the marker. */\r\n                  const el = document.createElement('div');\r\n                  /* Assign a unique `id` to the marker. */\r\n                  el.id = `marker-${marker.properties.id}`;\r\n                  /* Assign the `marker` class to each marker for styling. */\r\n                  el.className = 'marker';\r\n\r\n                  /**\r\n                   * Create a marker using the div element\r\n                   * defined above and add it to the map.\r\n                   **/\r\n                  new mapboxgl.Marker(el, { offset: [0, -23] })\r\n                  .setLngLat(marker.geometry.coordinates)\r\n                  .addTo(map);\r\n\r\n                  el.addEventListener('click', (e) => {\r\n                      /* Fly to the point */\r\n                      flyToStore(marker);\r\n                      /* Close all other popups and display popup for clicked store */\r\n                      createPopUp(marker);\r\n                      /* Highlight listing in sidebar */\r\n                      const activeItem = document.getElementsByClassName('active');\r\n                      e.stopPropagation();\r\n                      if (activeItem[0]) {\r\n                          activeItem[0].classList.remove('active');\r\n                      }\r\n                      const listing = document.getElementById(`listing-${marker.properties.id}`);\r\n                      listing.classList.add('active');\r\n                  });\r\n              }      \r\n    }\r\n\r\n      return (\r\n        <div>\r\n            <div className=\"sidebar\">\r\n                Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\r\n            </div>\r\n            <div ref={mapContainer} className=\"map-container\" />\r\n        </div>\r\n      );\r\n}"]},"metadata":{},"sourceType":"module"}