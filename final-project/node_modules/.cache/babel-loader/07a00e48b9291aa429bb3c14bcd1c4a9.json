{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Isaak\\\\Desktop\\\\Databas\\\\final-project\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\n\nimport Key from \"../img/key.png\";\nimport Filter from \"./Filter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = 'pk.eyJ1IjoiaXNhYWt0cmVhdHkiLCJhIjoiY2t1Mzhta2xnMW00MzJvczhmNzAxYmFmMyJ9.H05SHwWlCus6O_MBcXFnUQ';\nexport default function App() {\n  _s();\n\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [lng, setLng] = useState(-99.0000);\n  const [lat, setLat] = useState(38.0000);\n  const [zoom, setZoom] = useState(4.00); // Initializes Map\n\n  useEffect(() => {\n    if (map.current) return; // initialize map only once\n\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/navigation-night-v1',\n      center: [lng, lat],\n      zoom: zoom\n    });\n  }); // Stores Coordinates\n\n  useEffect(() => {\n    if (!map.current) return; // wait for map to initialize\n\n    map.current.on('load', () => {\n      // Add a geojson point source.\n      // Heatmap layers also work with a vector tile source.\n      map.current.addSource('earthquakes', {\n        'type': 'geojson',\n        'data': 'https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson'\n      });\n      map.current.addLayer({\n        'id': 'earthquakes-heat',\n        'type': 'heatmap',\n        'source': 'earthquakes',\n        'maxzoom': 9,\n        'paint': {\n          // Increase the heatmap weight based on frequency and property magnitude\n          'heatmap-weight': ['interpolate', ['linear'], ['get', 'mag'], 0, 0, 6, 1],\n          // Increase the heatmap color weight weight by zoom level\n          // heatmap-intensity is a multiplier on top of heatmap-weight\n          'heatmap-intensity': ['interpolate', ['linear'], ['zoom'], 0, 1, 9, 3],\n          // Color ramp for heatmap.  Domain is 0 (low) to 1 (high).\n          // Begin color ramp at 0-stop with a 0-transparancy color\n          // to create a blur-like effect.\n          'heatmap-color': ['interpolate', ['linear'], ['heatmap-density'], 0, 'rgba(33,102,172,0)', 0.2, 'rgb(103,169,207)', 0.4, 'rgb(209,229,240)', 0.6, 'rgb(253,219,199)', 0.8, 'rgb(239,138,98)', 1, 'rgb(178,24,43)'],\n          // Adjust the heatmap radius by zoom level\n          'heatmap-radius': ['interpolate', ['linear'], ['zoom'], 0, 2, 9, 20],\n          // Transition from heatmap to circle layer by zoom level\n          'heatmap-opacity': ['interpolate', ['linear'], ['zoom'], 7, 1, 9, 0]\n        }\n      }, 'waterway-label');\n      map.current.addLayer({\n        'id': 'earthquakes-point',\n        'type': 'circle',\n        'source': 'earthquakes',\n        'minzoom': 7,\n        'paint': {\n          // Size circle radius by earthquake magnitude and zoom level\n          'circle-radius': ['interpolate', ['linear'], ['zoom'], 7, ['interpolate', ['linear'], ['get', 'mag'], 1, 1, 6, 4], 16, ['interpolate', ['linear'], ['get', 'mag'], 1, 5, 6, 50]],\n          // Color circle by earthquake magnitude\n          'circle-color': ['interpolate', ['linear'], ['get', 'mag'], 1, 'rgba(33,102,172,0)', 2, 'rgb(103,169,207)', 3, 'rgb(209,229,240)', 4, 'rgb(253,219,199)', 5, 'rgb(239,138,98)', 6, 'rgb(178,24,43)'],\n          'circle-stroke-color': 'white',\n          'circle-stroke-width': 1,\n          // Transition from heatmap to circle layer by zoom level\n          'circle-opacity': ['interpolate', ['linear'], ['zoom'], 7, 0, 8, 1]\n        }\n      }, 'waterway-label');\n    }); // Insert the layer beneath any symbol layer.\n\n    const layers = map.current.getStyle().layers;\n    const labelLayerId = layers.find(layer => layer.type === 'symbol' && layer.layout['text-field']).id; // The 'building' layer in the Mapbox Streets\n    // vector tileset contains building height data\n    // from OpenStreetMap.\n\n    map.addLayer({\n      'id': 'add-3d-buildings',\n      'source': 'composite',\n      'source-layer': 'building',\n      'filter': ['==', 'extrude', 'true'],\n      'type': 'fill-extrusion',\n      'minzoom': 15,\n      'paint': {\n        'fill-extrusion-color': '#aaa',\n        // Use an 'interpolate' expression to\n        // add a smooth transition effect to\n        // the buildings as the user zooms in.\n        'fill-extrusion-height': ['interpolate', ['linear'], ['zoom'], 15, 0, 15.05, ['get', 'height']],\n        'fill-extrusion-base': ['interpolate', ['linear'], ['zoom'], 15, 0, 15.05, ['get', 'min_height']],\n        'fill-extrusion-opacity': 0.6\n      }\n    }, labelLayerId);\n    map.current.on('move', () => {\n      setLng(map.current.getCenter().lng.toFixed(4));\n      setLat(map.current.getCenter().lat.toFixed(4));\n      setZoom(map.current.getZoom().toFixed(2));\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [\"Longitude: \", lng, \" | Latitude: \", lat, \" | Zoom: \", zoom]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"key\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Key,\n        alt: \"Key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"key-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"1.0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"6.0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter\",\n      children: /*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainer,\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"TO/1vxu7JLaPLRGCkFdYOCVZ0mc=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Isaak/Desktop/Databas/final-project/src/components/App.js"],"names":["React","useRef","useEffect","useState","mapboxgl","Key","Filter","accessToken","App","mapContainer","map","lng","setLng","lat","setLat","zoom","setZoom","current","Map","container","style","center","on","addSource","addLayer","layers","getStyle","labelLayerId","find","layer","type","layout","id","getCenter","toFixed","getZoom"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\r\nimport Key from \"../img/key.png\";\r\nimport Filter from \"./Filter\"\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoiaXNhYWt0cmVhdHkiLCJhIjoiY2t1Mzhta2xnMW00MzJvczhmNzAxYmFmMyJ9.H05SHwWlCus6O_MBcXFnUQ';\r\n\r\nexport default function App() {\r\n\r\n    const mapContainer = useRef(null);\r\n    const map = useRef(null);\r\n    const [lng, setLng] = useState(-99.0000);\r\n    const [lat, setLat] = useState(38.0000);\r\n    const [zoom, setZoom] = useState(4.00);\r\n\r\n    // Initializes Map\r\n    useEffect(() => {\r\n        if (map.current) return; // initialize map only once\r\n        map.current = new mapboxgl.Map({\r\n          container: mapContainer.current,\r\n          style: 'mapbox://styles/mapbox/navigation-night-v1',\r\n          center: [lng, lat],\r\n          zoom: zoom\r\n        });\r\n      });\r\n\r\n    // Stores Coordinates\r\n    useEffect(() => {\r\n        if (!map.current) return; // wait for map to initialize\r\n        map.current.on('load', () => {\r\n          // Add a geojson point source.\r\n          // Heatmap layers also work with a vector tile source.\r\n          map.current.addSource('earthquakes', {\r\n          'type': 'geojson',\r\n          'data': 'https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson'\r\n          });\r\n           \r\n          map.current.addLayer(\r\n          {\r\n          'id': 'earthquakes-heat',\r\n          'type': 'heatmap',\r\n          'source': 'earthquakes',\r\n          'maxzoom': 9,\r\n          'paint': {\r\n          // Increase the heatmap weight based on frequency and property magnitude\r\n          'heatmap-weight': [\r\n          'interpolate',\r\n          ['linear'],\r\n          ['get', 'mag'],\r\n          0,\r\n          0,\r\n          6,\r\n          1\r\n          ],\r\n          // Increase the heatmap color weight weight by zoom level\r\n          // heatmap-intensity is a multiplier on top of heatmap-weight\r\n          'heatmap-intensity': [\r\n          'interpolate',\r\n          ['linear'],\r\n          ['zoom'],\r\n          0,\r\n          1,\r\n          9,\r\n          3\r\n          ],\r\n          // Color ramp for heatmap.  Domain is 0 (low) to 1 (high).\r\n          // Begin color ramp at 0-stop with a 0-transparancy color\r\n          // to create a blur-like effect.\r\n          'heatmap-color': [\r\n          'interpolate',\r\n          ['linear'],\r\n          ['heatmap-density'],\r\n          0,\r\n          'rgba(33,102,172,0)',\r\n          0.2,\r\n          'rgb(103,169,207)',\r\n          0.4,\r\n          'rgb(209,229,240)',\r\n          0.6,\r\n          'rgb(253,219,199)',\r\n          0.8,\r\n          'rgb(239,138,98)',\r\n          1,\r\n          'rgb(178,24,43)'\r\n          ],\r\n          // Adjust the heatmap radius by zoom level\r\n          'heatmap-radius': [\r\n          'interpolate',\r\n          ['linear'],\r\n          ['zoom'],\r\n          0,\r\n          2,\r\n          9,\r\n          20\r\n          ],\r\n          // Transition from heatmap to circle layer by zoom level\r\n          'heatmap-opacity': [\r\n          'interpolate',\r\n          ['linear'],\r\n          ['zoom'],\r\n          7,\r\n          1,\r\n          9,\r\n          0\r\n          ]\r\n          }\r\n          },\r\n          'waterway-label'\r\n          );\r\n           \r\n          map.current.addLayer(\r\n          {\r\n          'id': 'earthquakes-point',\r\n          'type': 'circle',\r\n          'source': 'earthquakes',\r\n          'minzoom': 7,\r\n          'paint': {\r\n          // Size circle radius by earthquake magnitude and zoom level\r\n          'circle-radius': [\r\n          'interpolate',\r\n          ['linear'],\r\n          ['zoom'],\r\n          7,\r\n          ['interpolate', ['linear'], ['get', 'mag'], 1, 1, 6, 4],\r\n          16,\r\n          ['interpolate', ['linear'], ['get', 'mag'], 1, 5, 6, 50]\r\n          ],\r\n          // Color circle by earthquake magnitude\r\n          'circle-color': [\r\n          'interpolate',\r\n          ['linear'],\r\n          ['get', 'mag'],\r\n          1,\r\n          'rgba(33,102,172,0)',\r\n          2,\r\n          'rgb(103,169,207)',\r\n          3,\r\n          'rgb(209,229,240)',\r\n          4,\r\n          'rgb(253,219,199)',\r\n          5,\r\n          'rgb(239,138,98)',\r\n          6,\r\n          'rgb(178,24,43)'\r\n          ],\r\n          'circle-stroke-color': 'white',\r\n          'circle-stroke-width': 1,\r\n          // Transition from heatmap to circle layer by zoom level\r\n          'circle-opacity': [\r\n          'interpolate',\r\n          ['linear'],\r\n          ['zoom'],\r\n          7,\r\n          0,\r\n          8,\r\n          1\r\n          ]\r\n          }\r\n          },\r\n          'waterway-label'\r\n          );\r\n          });\r\n            // Insert the layer beneath any symbol layer.\r\n            const layers = map.current.getStyle().layers;\r\n            const labelLayerId = layers.find(\r\n            (layer) => layer.type === 'symbol' && layer.layout['text-field']\r\n            ).id;\r\n             \r\n            // The 'building' layer in the Mapbox Streets\r\n            // vector tileset contains building height data\r\n            // from OpenStreetMap.\r\n            map.addLayer(\r\n            {\r\n            'id': 'add-3d-buildings',\r\n            'source': 'composite',\r\n            'source-layer': 'building',\r\n            'filter': ['==', 'extrude', 'true'],\r\n            'type': 'fill-extrusion',\r\n            'minzoom': 15,\r\n            'paint': {\r\n            'fill-extrusion-color': '#aaa',\r\n             \r\n            // Use an 'interpolate' expression to\r\n            // add a smooth transition effect to\r\n            // the buildings as the user zooms in.\r\n            'fill-extrusion-height': [\r\n            'interpolate',\r\n            ['linear'],\r\n            ['zoom'],\r\n            15,\r\n            0,\r\n            15.05,\r\n            ['get', 'height']\r\n            ],\r\n            'fill-extrusion-base': [\r\n            'interpolate',\r\n            ['linear'],\r\n            ['zoom'],\r\n            15,\r\n            0,\r\n            15.05,\r\n            ['get', 'min_height']\r\n            ],\r\n            'fill-extrusion-opacity': 0.6\r\n            }\r\n            },\r\n            labelLayerId\r\n            );\r\n\r\n\r\n        map.current.on('move', () => {\r\n          setLng(map.current.getCenter().lng.toFixed(4));\r\n          setLat(map.current.getCenter().lat.toFixed(4));\r\n          setZoom(map.current.getZoom().toFixed(2));\r\n        });\r\n      });\r\n\r\n      return (\r\n        <div>\r\n            <div className=\"sidebar\">\r\n                Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\r\n            </div>\r\n            <div className=\"key\">\r\n                <img src={Key} alt=\"Key\" />\r\n                <div className=\"key-text\">\r\n                  <p>1.0</p>\r\n                  <p>6.0</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"filter\">\r\n              <Filter />\r\n            </div>\r\n            <div ref={mapContainer} className=\"map-container\" />\r\n        </div>\r\n      );\r\n}"]},"metadata":{},"sourceType":"module"}