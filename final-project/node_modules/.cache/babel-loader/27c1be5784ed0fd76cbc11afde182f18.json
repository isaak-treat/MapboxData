{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Isaak\\\\Desktop\\\\Databas\\\\final-project\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = 'pk.eyJ1IjoiaXNhYWt0cmVhdHkiLCJhIjoiY2t1Mzhta2xnMW00MzJvczhmNzAxYmFmMyJ9.H05SHwWlCus6O_MBcXFnUQ';\nexport default function App() {\n  _s();\n\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [lng, setLng] = useState(-99);\n  const [lat, setLat] = useState(38);\n  const [zoom, setZoom] = useState(4);\n  const shipwrecks = {\n    \"type\": \"FeatureCollection\",\n    \"features\": [{\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-77.034084142948, 38.909671288923]\n      },\n      \"properties\": {\n        \"phoneFormatted\": \"(202) 234-7336\",\n        \"phone\": \"2022347336\",\n        \"address\": \"1471 P St NW\",\n        \"city\": \"Washington DC\",\n        \"country\": \"United States\",\n        \"crossStreet\": \"at 15th St NW\",\n        \"postalCode\": \"20005\",\n        \"state\": \"D.C.\"\n      }\n    }, {\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-77.049766, 38.900772]\n      },\n      \"properties\": {\n        \"phoneFormatted\": \"(202) 507-8357\",\n        \"phone\": \"2025078357\",\n        \"address\": \"2221 I St NW\",\n        \"city\": \"Washington DC\",\n        \"country\": \"United States\",\n        \"crossStreet\": \"at 22nd St NW\",\n        \"postalCode\": \"20037\",\n        \"state\": \"D.C.\"\n      }\n    }, {\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-77.043929, 38.910525]\n      },\n      \"properties\": {\n        \"phoneFormatted\": \"(202) 387-9338\",\n        \"phone\": \"2023879338\",\n        \"address\": \"1512 Connecticut Ave NW\",\n        \"city\": \"Washington DC\",\n        \"country\": \"United States\",\n        \"crossStreet\": \"at Dupont Circle\",\n        \"postalCode\": \"20036\",\n        \"state\": \"D.C.\"\n      }\n    }, {\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-77.0672, 38.90516896]\n      },\n      \"properties\": {\n        \"phoneFormatted\": \"(202) 337-9338\",\n        \"phone\": \"2023379338\",\n        \"address\": \"3333 M St NW\",\n        \"city\": \"Washington DC\",\n        \"country\": \"United States\",\n        \"crossStreet\": \"at 34th St NW\",\n        \"postalCode\": \"20007\",\n        \"state\": \"D.C.\"\n      }\n    }, {\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-77.002583742142, 38.887041080933]\n      },\n      \"properties\": {\n        \"phoneFormatted\": \"(202) 547-9338\",\n        \"phone\": \"2025479338\",\n        \"address\": \"221 Pennsylvania Ave SE\",\n        \"city\": \"Washington DC\",\n        \"country\": \"United States\",\n        \"crossStreet\": \"btwn 2nd & 3rd Sts. SE\",\n        \"postalCode\": \"20003\",\n        \"state\": \"D.C.\"\n      }\n    }, {\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-76.933492720127, 38.99225245786]\n      },\n      \"properties\": {\n        \"address\": \"8204 Baltimore Ave\",\n        \"city\": \"College Park\",\n        \"country\": \"United States\",\n        \"postalCode\": \"20740\",\n        \"state\": \"MD\"\n      }\n    }, {\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-77.097083330154, 38.980979]\n      },\n      \"properties\": {\n        \"phoneFormatted\": \"(301) 654-7336\",\n        \"phone\": \"3016547336\",\n        \"address\": \"4831 Bethesda Ave\",\n        \"cc\": \"US\",\n        \"city\": \"Bethesda\",\n        \"country\": \"United States\",\n        \"postalCode\": \"20814\",\n        \"state\": \"MD\"\n      }\n    }, {\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-77.359425054188, 38.958058116661]\n      },\n      \"properties\": {\n        \"phoneFormatted\": \"(571) 203-0082\",\n        \"phone\": \"5712030082\",\n        \"address\": \"11935 Democracy Dr\",\n        \"city\": \"Reston\",\n        \"country\": \"United States\",\n        \"crossStreet\": \"btw Explorer & Library\",\n        \"postalCode\": \"20190\",\n        \"state\": \"VA\"\n      }\n    }, {\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-77.10853099823, 38.880100922392]\n      },\n      \"properties\": {\n        \"phoneFormatted\": \"(703) 522-2016\",\n        \"phone\": \"7035222016\",\n        \"address\": \"4075 Wilson Blvd\",\n        \"city\": \"Arlington\",\n        \"country\": \"United States\",\n        \"crossStreet\": \"at N Randolph St.\",\n        \"postalCode\": \"22203\",\n        \"state\": \"VA\"\n      }\n    }, {\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-75.28784, 40.008008]\n      },\n      \"properties\": {\n        \"phoneFormatted\": \"(610) 642-9400\",\n        \"phone\": \"6106429400\",\n        \"address\": \"68 Coulter Ave\",\n        \"city\": \"Ardmore\",\n        \"country\": \"United States\",\n        \"postalCode\": \"19003\",\n        \"state\": \"PA\"\n      }\n    }, {\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-75.20121216774, 39.954030175164]\n      },\n      \"properties\": {\n        \"phoneFormatted\": \"(215) 386-1365\",\n        \"phone\": \"2153861365\",\n        \"address\": \"3925 Walnut St\",\n        \"city\": \"Philadelphia\",\n        \"country\": \"United States\",\n        \"postalCode\": \"19104\",\n        \"state\": \"PA\"\n      }\n    }, {\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-77.043959498405, 38.903883387232]\n      },\n      \"properties\": {\n        \"phoneFormatted\": \"(202) 331-3355\",\n        \"phone\": \"2023313355\",\n        \"address\": \"1901 L St. NW\",\n        \"city\": \"Washington DC\",\n        \"country\": \"United States\",\n        \"crossStreet\": \"at 19th St\",\n        \"postalCode\": \"20036\",\n        \"state\": \"D.C.\"\n      }\n    }]\n  }; // Initializes Map\n\n  useEffect(() => {\n    if (map.current) return; // initialize map only once\n\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/dark-v10',\n      center: [lng, lat],\n      zoom: zoom\n    });\n  }); // Stores Coordinates\n\n  useEffect(() => {\n    if (!map.current) return; // wait for map to initialize\n\n    map.current.on('move', () => {\n      setLng(map.current.getCenter().lng.toFixed(4));\n      setLat(map.current.getCenter().lat.toFixed(4));\n      setZoom(map.current.getZoom().toFixed(2));\n    });\n    map.current.on('load', () => {\n      map.current.addSource('places', {\n        type: 'geojson',\n        data: shipwrecks\n      });\n      addMarkers();\n    });\n  });\n\n  function addMarkers() {\n    /* For each feature in the GeoJSON object above: */\n    for (const marker of shipwrecks.features) {\n      /* Create a div element for the marker. */\n      const el = document.createElement('div');\n      /* Assign a unique `id` to the marker. */\n\n      el.id = \"marker-\".concat(marker.properties.id);\n      /* Assign the `marker` class to each marker for styling. */\n\n      el.className = 'marker';\n      /**\r\n       * Create a marker using the div element\r\n       * defined above and add it to the map.\r\n       **/\n\n      new mapboxgl.Marker(el, {\n        offset: [0, -23]\n      }).setLngLat(marker.geometry.coordinates).addTo(map);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [\"Longitude: \", lng, \" | Latitude: \", lat, \" | Zoom: \", zoom]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainer,\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 309,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"P4PpKR22jXXog9P9JD7oXb6IQlA=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Isaak/Desktop/Databas/final-project/src/components/App.js"],"names":["React","useRef","useEffect","useState","mapboxgl","accessToken","App","mapContainer","map","lng","setLng","lat","setLat","zoom","setZoom","shipwrecks","current","Map","container","style","center","on","getCenter","toFixed","getZoom","addSource","type","data","addMarkers","marker","features","el","document","createElement","id","properties","className","Marker","offset","setLngLat","geometry","coordinates","addTo"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoiaXNhYWt0cmVhdHkiLCJhIjoiY2t1Mzhta2xnMW00MzJvczhmNzAxYmFmMyJ9.H05SHwWlCus6O_MBcXFnUQ';\r\n\r\nexport default function App() {\r\n\r\n    const mapContainer = useRef(null);\r\n    const map = useRef(null);\r\n    const [lng, setLng] = useState(-99);\r\n    const [lat, setLat] = useState(38);\r\n    const [zoom, setZoom] = useState(4);\r\n\r\n    const shipwrecks = {\r\n      \"type\": \"FeatureCollection\",\r\n      \"features\": [\r\n          {\r\n          \"type\": \"Feature\",\r\n          \"geometry\": {\r\n              \"type\": \"Point\",\r\n              \"coordinates\": [\r\n              -77.034084142948,\r\n              38.909671288923\r\n              ]\r\n          },\r\n          \"properties\": {\r\n              \"phoneFormatted\": \"(202) 234-7336\",\r\n              \"phone\": \"2022347336\",\r\n              \"address\": \"1471 P St NW\",\r\n              \"city\": \"Washington DC\",\r\n              \"country\": \"United States\",\r\n              \"crossStreet\": \"at 15th St NW\",\r\n              \"postalCode\": \"20005\",\r\n              \"state\": \"D.C.\"\r\n          }\r\n          },\r\n          {\r\n          \"type\": \"Feature\",\r\n          \"geometry\": {\r\n              \"type\": \"Point\",\r\n              \"coordinates\": [\r\n              -77.049766,\r\n              38.900772\r\n              ]\r\n          },\r\n          \"properties\": {\r\n              \"phoneFormatted\": \"(202) 507-8357\",\r\n              \"phone\": \"2025078357\",\r\n              \"address\": \"2221 I St NW\",\r\n              \"city\": \"Washington DC\",\r\n              \"country\": \"United States\",\r\n              \"crossStreet\": \"at 22nd St NW\",\r\n              \"postalCode\": \"20037\",\r\n              \"state\": \"D.C.\"\r\n          }\r\n          },\r\n          {\r\n          \"type\": \"Feature\",\r\n          \"geometry\": {\r\n              \"type\": \"Point\",\r\n              \"coordinates\": [\r\n              -77.043929,\r\n              38.910525\r\n              ]\r\n          },\r\n          \"properties\": {\r\n              \"phoneFormatted\": \"(202) 387-9338\",\r\n              \"phone\": \"2023879338\",\r\n              \"address\": \"1512 Connecticut Ave NW\",\r\n              \"city\": \"Washington DC\",\r\n              \"country\": \"United States\",\r\n              \"crossStreet\": \"at Dupont Circle\",\r\n              \"postalCode\": \"20036\",\r\n              \"state\": \"D.C.\"\r\n          }\r\n          },\r\n          {\r\n          \"type\": \"Feature\",\r\n          \"geometry\": {\r\n              \"type\": \"Point\",\r\n              \"coordinates\": [\r\n              -77.0672,\r\n              38.90516896\r\n              ]\r\n          },\r\n          \"properties\": {\r\n              \"phoneFormatted\": \"(202) 337-9338\",\r\n              \"phone\": \"2023379338\",\r\n              \"address\": \"3333 M St NW\",\r\n              \"city\": \"Washington DC\",\r\n              \"country\": \"United States\",\r\n              \"crossStreet\": \"at 34th St NW\",\r\n              \"postalCode\": \"20007\",\r\n              \"state\": \"D.C.\"\r\n          }\r\n          },\r\n          {\r\n          \"type\": \"Feature\",\r\n          \"geometry\": {\r\n              \"type\": \"Point\",\r\n              \"coordinates\": [\r\n              -77.002583742142,\r\n              38.887041080933\r\n              ]\r\n          },\r\n          \"properties\": {\r\n              \"phoneFormatted\": \"(202) 547-9338\",\r\n              \"phone\": \"2025479338\",\r\n              \"address\": \"221 Pennsylvania Ave SE\",\r\n              \"city\": \"Washington DC\",\r\n              \"country\": \"United States\",\r\n              \"crossStreet\": \"btwn 2nd & 3rd Sts. SE\",\r\n              \"postalCode\": \"20003\",\r\n              \"state\": \"D.C.\"\r\n          }\r\n          },\r\n          {\r\n          \"type\": \"Feature\",\r\n          \"geometry\": {\r\n              \"type\": \"Point\",\r\n              \"coordinates\": [\r\n              -76.933492720127,\r\n              38.99225245786\r\n              ]\r\n          },\r\n          \"properties\": {\r\n              \"address\": \"8204 Baltimore Ave\",\r\n              \"city\": \"College Park\",\r\n              \"country\": \"United States\",\r\n              \"postalCode\": \"20740\",\r\n              \"state\": \"MD\"\r\n          }\r\n          },\r\n          {\r\n          \"type\": \"Feature\",\r\n          \"geometry\": {\r\n              \"type\": \"Point\",\r\n              \"coordinates\": [\r\n              -77.097083330154,\r\n              38.980979\r\n              ]\r\n          },\r\n          \"properties\": {\r\n              \"phoneFormatted\": \"(301) 654-7336\",\r\n              \"phone\": \"3016547336\",\r\n              \"address\": \"4831 Bethesda Ave\",\r\n              \"cc\": \"US\",\r\n              \"city\": \"Bethesda\",\r\n              \"country\": \"United States\",\r\n              \"postalCode\": \"20814\",\r\n              \"state\": \"MD\"\r\n          }\r\n          },\r\n          {\r\n          \"type\": \"Feature\",\r\n          \"geometry\": {\r\n              \"type\": \"Point\",\r\n              \"coordinates\": [\r\n              -77.359425054188,\r\n              38.958058116661\r\n              ]\r\n          },\r\n          \"properties\": {\r\n              \"phoneFormatted\": \"(571) 203-0082\",\r\n              \"phone\": \"5712030082\",\r\n              \"address\": \"11935 Democracy Dr\",\r\n              \"city\": \"Reston\",\r\n              \"country\": \"United States\",\r\n              \"crossStreet\": \"btw Explorer & Library\",\r\n              \"postalCode\": \"20190\",\r\n              \"state\": \"VA\"\r\n          }\r\n          },\r\n          {\r\n          \"type\": \"Feature\",\r\n          \"geometry\": {\r\n              \"type\": \"Point\",\r\n              \"coordinates\": [\r\n              -77.10853099823,\r\n              38.880100922392\r\n              ]\r\n          },\r\n          \"properties\": {\r\n              \"phoneFormatted\": \"(703) 522-2016\",\r\n              \"phone\": \"7035222016\",\r\n              \"address\": \"4075 Wilson Blvd\",\r\n              \"city\": \"Arlington\",\r\n              \"country\": \"United States\",\r\n              \"crossStreet\": \"at N Randolph St.\",\r\n              \"postalCode\": \"22203\",\r\n              \"state\": \"VA\"\r\n          }\r\n          },\r\n          {\r\n          \"type\": \"Feature\",\r\n          \"geometry\": {\r\n              \"type\": \"Point\",\r\n              \"coordinates\": [\r\n              -75.28784,\r\n              40.008008\r\n              ]\r\n          },\r\n          \"properties\": {\r\n              \"phoneFormatted\": \"(610) 642-9400\",\r\n              \"phone\": \"6106429400\",\r\n              \"address\": \"68 Coulter Ave\",\r\n              \"city\": \"Ardmore\",\r\n              \"country\": \"United States\",\r\n              \"postalCode\": \"19003\",\r\n              \"state\": \"PA\"\r\n          }\r\n          },\r\n          {\r\n          \"type\": \"Feature\",\r\n          \"geometry\": {\r\n              \"type\": \"Point\",\r\n              \"coordinates\": [\r\n              -75.20121216774,\r\n              39.954030175164\r\n              ]\r\n          },\r\n          \"properties\": {\r\n              \"phoneFormatted\": \"(215) 386-1365\",\r\n              \"phone\": \"2153861365\",\r\n              \"address\": \"3925 Walnut St\",\r\n              \"city\": \"Philadelphia\",\r\n              \"country\": \"United States\",\r\n              \"postalCode\": \"19104\",\r\n              \"state\": \"PA\"\r\n          }\r\n          },\r\n          {\r\n          \"type\": \"Feature\",\r\n          \"geometry\": {\r\n              \"type\": \"Point\",\r\n              \"coordinates\": [\r\n              -77.043959498405,\r\n              38.903883387232\r\n              ]\r\n          },\r\n          \"properties\": {\r\n              \"phoneFormatted\": \"(202) 331-3355\",\r\n              \"phone\": \"2023313355\",\r\n              \"address\": \"1901 L St. NW\",\r\n              \"city\": \"Washington DC\",\r\n              \"country\": \"United States\",\r\n              \"crossStreet\": \"at 19th St\",\r\n              \"postalCode\": \"20036\",\r\n              \"state\": \"D.C.\"\r\n          }\r\n          }\r\n      ]\r\n      };\r\n\r\n\r\n\r\n    // Initializes Map\r\n    useEffect(() => {\r\n        if (map.current) return; // initialize map only once\r\n        map.current = new mapboxgl.Map({\r\n          container: mapContainer.current,\r\n          style: 'mapbox://styles/mapbox/dark-v10',\r\n          center: [lng, lat],\r\n          zoom: zoom\r\n        });\r\n      });\r\n\r\n    // Stores Coordinates\r\n    useEffect(() => {\r\n        if (!map.current) return; // wait for map to initialize\r\n        map.current.on('move', () => {\r\n          setLng(map.current.getCenter().lng.toFixed(4));\r\n          setLat(map.current.getCenter().lat.toFixed(4));\r\n          setZoom(map.current.getZoom().toFixed(2));\r\n        });\r\n\r\n        map.current.on('load', () => {\r\n\r\n            map.current.addSource('places', {\r\n                type: 'geojson',\r\n                data: shipwrecks\r\n            });\r\n            addMarkers();\r\n        });\r\n      });\r\n\r\n\r\n    function addMarkers() {\r\n                /* For each feature in the GeoJSON object above: */\r\n                for (const marker of shipwrecks.features) {\r\n                  /* Create a div element for the marker. */\r\n                  const el = document.createElement('div');\r\n                  /* Assign a unique `id` to the marker. */\r\n                  el.id = `marker-${marker.properties.id}`;\r\n                  /* Assign the `marker` class to each marker for styling. */\r\n                  el.className = 'marker';\r\n\r\n                  /**\r\n                   * Create a marker using the div element\r\n                   * defined above and add it to the map.\r\n                   **/\r\n                  new mapboxgl.Marker(el, { offset: [0, -23] })\r\n                  .setLngLat(marker.geometry.coordinates)\r\n                  .addTo(map);\r\n              }      \r\n    }\r\n\r\n      return (\r\n        <div>\r\n            <div className=\"sidebar\">\r\n                Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\r\n            </div>\r\n            <div ref={mapContainer} className=\"map-container\" />\r\n        </div>\r\n      );\r\n}"]},"metadata":{},"sourceType":"module"}